{"version":3,"file":"component---src-pages-index-tsx-086ff3615ece3ec10895.js","mappings":"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","sources":["webpack://fan-control/../src/image-utils.ts","webpack://fan-control/../src/components/hooks.ts","webpack://fan-control/../src/components/picture.tsx","webpack://fan-control/../src/components/layout-wrapper.tsx","webpack://fan-control/../src/components/placeholder.tsx","webpack://fan-control/../src/components/main-image.tsx","webpack://fan-control/../src/components/gatsby-image.browser.tsx","webpack://fan-control/../src/components/gatsby-image.server.tsx","webpack://fan-control/../src/components/static-image.server.tsx","webpack://fan-control/../src/components/static-image.tsx","webpack://fan-control/./node_modules/gatsby-plugin-image/node_modules/camelcase/index.js","webpack://fan-control/./src/components/card.tsx","webpack://fan-control/./src/components/demo/fanCurve.tsx","webpack://fan-control/./src/components/demo/fanCurveCard.tsx","webpack://fan-control/./src/components/demo/mixFanCurveCard.tsx","webpack://fan-control/./src/components/demo/temperatureSource.ts","webpack://fan-control/./src/components/externalLink.tsx","webpack://fan-control/./src/components/icon.tsx","webpack://fan-control/./src/components/layout.tsx","webpack://fan-control/./src/components/select.tsx","webpack://fan-control/./src/contents/consts.tsx","webpack://fan-control/./src/contents/icons.tsx","webpack://fan-control/./src/hooks/customHooks.ts","webpack://fan-control/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://fan-control/./node_modules/@mdx-js/react/lib/index.js","webpack://fan-control/./src/contents/description.mdx","webpack://fan-control/./src/pages/index.tsx","webpack://fan-control/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { Fragment, FunctionComponent } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<ILayoutWrapperProps> =\n  function LayoutWrapper({ children, ...props }) {\n    return (\n      <Fragment>\n        <Sizer {...props} />\n        {children}\n\n        {SERVER ? <NativeScriptLoading /> : null}\n      </Fragment>\n    )\n  }\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[a-zA-Z]/.test(character) && character.toUpperCase() === character) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[a-zA-Z]/.test(character) && character.toLowerCase() === character) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLowerCase() === character && character.toUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toUpperCase() === character && character.toLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = Object.assign({\n\t\tpascalCase: false\n\t}, options);\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toUpperCase() : input.toLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLowerCase()\n\t\t.replace(/[_.\\- ]+(\\w|$)/g, (_, p1) => p1.toUpperCase())\n\t\t.replace(/\\d+(\\w|$)/g, m => m.toUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import * as React from \"react\";\r\n\r\nconst defaultClass = \"h-fit w-fit p-3 rounded-lg shadow-md shadow-slate-400\";\r\n\r\nconst Card = (\r\n  props: React.DetailedHTMLProps<\r\n    React.HTMLAttributes<HTMLDivElement>,\r\n    HTMLDivElement\r\n  >\r\n) => {\r\n  const { children, className, ...restOfProps } = props;\r\n  return (\r\n    <div {...restOfProps} className={`${defaultClass} ${className ?? \"\"}`}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;","import { TemperatureSource } from \"./temperatureSource\";\r\n\r\ntype FanCurve = {\r\n  name: string;\r\n  getValue: () => number;\r\n};\r\n\r\ntype LinearFanCurve = FanCurve & {\r\n  selectedTemperature?: string;\r\n};\r\n\r\ntype MixFunction = {\r\n  name: string;\r\n  invoke: (fanCurves: FanCurve[]) => number;\r\n};\r\n\r\ntype MixFanCurve = FanCurve & {\r\n  selectedMixFunction: MixFunction\r\n}\r\n\r\nconst mixFunctions: MixFunction[] = [\r\n  {\r\n    name: \"Max\",\r\n    invoke: (fanCurves) =>\r\n      fanCurves.map((x) => x.getValue()).reduce((a, b) => (a > b ? a : b), -1),\r\n  },\r\n  {\r\n    name: \"Min\",\r\n    invoke: (fanCurves) =>\r\n      fanCurves.map((x) => x.getValue()).reduce((a, b) => (a < b ? a : b), 101),\r\n  },\r\n  {\r\n    name: \"Average\",\r\n    invoke: (fanCurves) =>\r\n      fanCurves.map((f) => f.getValue()).reduce((a, b) => a + b, 0) /\r\n      fanCurves.length,\r\n  },\r\n];\r\n\r\n\r\nconst clamp = (num: number, min: number, max: number) =>\r\n  Math.min(Math.max(num, min), max);\r\n\r\nlet createlinearFanCurve = (\r\n  name: string,\r\n  selectedTemperature: string,\r\n  sources: TemperatureSource[]\r\n): LinearFanCurve => {\r\n  const getValue = () => {\r\n    let source = sources.find((x) => x.name == selectedTemperature);\r\n    if (source) {\r\n      return clamp((source.value - 30) * 3, 0, 100);\r\n    }\r\n\r\n    return -1;\r\n  };\r\n\r\n  return {\r\n    name,\r\n    selectedTemperature,\r\n    getValue,\r\n  };\r\n};\r\n\r\nlet createMixFanCurve = (name: string, mixFunction: MixFunction, fanCurves: FanCurve[]): MixFanCurve => {\r\n  return {\r\n    name,\r\n    selectedMixFunction: mixFunction,\r\n    getValue: () => {\r\n      return mixFunction.invoke(fanCurves);\r\n    },\r\n  };\r\n};\r\n\r\nexport type { FanCurve, LinearFanCurve, MixFanCurve, MixFunction };\r\n\r\nexport { mixFunctions, createlinearFanCurve, createMixFanCurve }\r\n","import React from \"react\";\r\nimport Card from \"../card\";\r\nimport { FanCurve } from \"./fanCurve\";\r\n\r\nconst icon = (path: string) => (\r\n  <svg className=\"w-12 h-12\" viewBox=\"0 0 24 24\">\r\n    <path fill=\"currentColor\" d={path} />\r\n  </svg>\r\n);\r\n\r\ntype Props = {\r\n  iconPath: string;\r\n  fanCurve: FanCurve;\r\n  controlValueSuffix?: string;\r\n  children?: React.ReactNode;\r\n};\r\n\r\nexport default function FanCurveCard({\r\n  iconPath,\r\n  fanCurve,\r\n  controlValueSuffix,\r\n  children,\r\n}: Props) {\r\n\r\n  const background = \"bg-blue-500\";\r\n  const value = fanCurve.getValue();\r\n  const isValid = (number:number) => number >= 0 && number <= 100;\r\n\r\n  return (\r\n    <Card className={background}>\r\n      <div className=\"flex flex-col text-white w-52\">\r\n        <div className=\"flex flex-row justify-center items-center\">\r\n          {icon(iconPath)}\r\n          <div className=\"border-b-2 ml-4 border-white w-full \">\r\n            {fanCurve.name}\r\n          </div>\r\n        </div>\r\n        <div>{children}</div>\r\n        <div className=\"mt-1 flex flex-row justify-between\">\r\n          <div>\r\n            <span>{isValid(value) ? value.toFixed(1) : \"-\"} %</span>{\" \"}\r\n            <span>{controlValueSuffix}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport icons from \"../../contents/icons\";\r\nimport Select from \"../select\";\r\nimport { createMixFanCurve, FanCurve, MixFanCurve, MixFunction, mixFunctions } from \"./fanCurve\";\r\nimport FanCurveCard from \"./fanCurveCard\";\r\n\r\nexport default function MixFanCurveCard({\r\n  name,\r\n  fanCurves,\r\n  selectedFanCurvesDefault,\r\n}: {\r\n  name: string;\r\n  fanCurves: FanCurve[];\r\n  selectedFanCurvesDefault?: string[];\r\n}) {\r\n  const [selectedFanCurveNames, setSelectedFanCurveNames] = useState(\r\n    selectedFanCurvesDefault ?? fanCurves.map(x => x.name)\r\n  );\r\n\r\n  const selectedFanCurves = fanCurves.filter(x => selectedFanCurveNames.includes(x.name))\r\n\r\n  const [selectedFunction, setSelectedFunction] = useState(mixFunctions[0]);\r\n\r\n  const addFromIndex = (index: number) => {\r\n    let fc = fanCurves[index - 1];\r\n    if (!selectedFanCurveNames.includes(fc.name)) {\r\n      setSelectedFanCurveNames(current => [...current, fc.name]);\r\n    }\r\n  };\r\n\r\n  const fanCurve: MixFanCurve = createMixFanCurve(name, selectedFunction, selectedFanCurves);\r\n\r\n  const suffix =\r\n    selectedFanCurveNames.length > 0\r\n      ? selectedFanCurves.find((x) => x.getValue() == fanCurve.getValue())\r\n          ?.name ?? \"Average\"\r\n      : selectedFunction.name;\r\n\r\n  return (\r\n    <FanCurveCard\r\n      iconPath={icons.svgPaths.mix}\r\n      fanCurve={fanCurve}\r\n      controlValueSuffix={` (${suffix})`}\r\n    >\r\n      <Select\r\n        onChange={(e) => setSelectedFunction(mixFunctions[e.target.selectedIndex])}\r\n        value={fanCurve.selectedMixFunction.name}\r\n        label=\"Function\"\r\n      >\r\n        {mixFunctions.map((f) => {\r\n          return (\r\n            <option key={f.name} value={f.name}>\r\n              {f.name}\r\n            </option>\r\n          );\r\n        })}\r\n      </Select>\r\n      <Select\r\n        value=\"default\"\r\n        onChange={(e) => addFromIndex(e.target.selectedIndex)}\r\n        label=\"\"\r\n        className=\"mt-1\"\r\n      >\r\n        <option key=\"-1\" disabled value=\"default\">\r\n          Add a fan curve...\r\n        </option>\r\n        {fanCurves.map((fc, i) => (\r\n          <option key={i}>{fc.name}</option>\r\n        ))}\r\n      </Select>\r\n\r\n      {selectedFanCurves.map((x, i) => (\r\n        <div key={i} className=\"text-sm my-2 ml-2\">\r\n          <span className=\"mr-1\">○</span> <span>{x.name}</span>\r\n          <span> ({x.getValue()} %)</span>\r\n          <button\r\n            onClick={() =>\r\n              setSelectedFanCurveNames(\r\n                selectedFanCurveNames.filter((f) => f != x.name)\r\n              )\r\n            }\r\n            className=\"float-right border border-white px-1 rounded\"\r\n          >\r\n            X\r\n          </button>\r\n        </div>\r\n      ))}\r\n    </FanCurveCard>\r\n  );\r\n}\r\n","type TemperatureSource = {\r\n  value: number;\r\n  name: string;\r\n};\r\n\r\nfunction createTempSource(\r\n  name: string,\r\n  min: number,\r\n  max: number\r\n): TemperatureSource {\r\n  return {\r\n    name: name,\r\n    value: Math.round((Math.random() * (max - min)) + min),\r\n  };\r\n}\r\n\r\nexport type { TemperatureSource };\r\n\r\nexport default createTempSource;\r\n","import React from \"react\";\r\n\r\nconst ExternalLink = ({ href, children }: { href: string, children: React.ReactNode; }) => {\r\n    return (\r\n      <a className=\"text-blue-600 underline\" href={href}>\r\n        {children}\r\n      </a>\r\n    );\r\n  };\r\n\r\nexport default ExternalLink;","import React from \"react\";\r\n\r\nconst Icon = (path: string) => (\r\n  <svg className=\"w-8 h-8\" viewBox=\"0 0 24 24\">\r\n    <path fill=\"currentColor\" d={path} />\r\n  </svg>\r\n);\r\n\r\nexport { Icon };\r\n","import * as React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport icons from \"./../contents/icons\";\r\nimport { useTimeoutBooleanState } from \"../hooks/customHooks\";\r\n\r\nconst links = [\r\n  { url: \"/\", title: \"Home\" },\r\n  //{ url: \"/demo\", title: \"Demo\" },\r\n  //{ url: \"/docs\", title: \"Docs\" },\r\n  { url: \"/about\", title: \"About\" },\r\n];\r\n\r\ntype Props = {\r\n  pageTitle?: string;\r\n  children: React.ReactNode;\r\n};\r\n\r\nconst getPageTitle = (title?: string) => {\r\n  if (title) {\r\n    return `> ${title}`;\r\n  }\r\n\r\n  return \"\";\r\n};\r\n\r\nconst Layout = ({ pageTitle, children }: Props) => {\r\n  const [isSpinning, setIsSpinning] = useTimeoutBooleanState(false, 3000);\r\n\r\n  return (\r\n    <div>\r\n      <nav className=\"bg-blue-500 text-slate-50 flex shadow-slate-400 shadow-md\">\r\n        <div className=\"flex justify-center items-center m-1\">\r\n          <svg\r\n            onMouseEnter={() => setIsSpinning(true)}\r\n            className={`${\r\n              isSpinning ? \"animate-spin\" : \"\"\r\n            } hover:animate-spin h-10 w-10`}\r\n            viewBox=\"0 0 24 24\"\r\n          >\r\n            <path fill=\"currentColor\" d={icons.svgPaths.fan} />\r\n          </svg>\r\n          <div className=\"ml-2\">\r\n            <Link to={links[0].url}>Fan Control</Link> {getPageTitle(pageTitle)}\r\n          </div>\r\n        </div>\r\n        <ul className=\"flex ml-auto justify-center items-center\">\r\n          {links.map((link) => (\r\n            <li key={link.title} className=\"p-3 hover:bg-blue-600\">\r\n              <Link to={link.url}>{link.title}</Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </nav>\r\n\r\n      <main className=\"bg-transparent\">{children}</main>\r\n\r\n      <footer className=\"bg-slate-200 flex justify-center items-center\"></footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\n\r\nexport default function (\r\n  props: React.DetailedHTMLProps<\r\n    React.SelectHTMLAttributes<HTMLSelectElement>,\r\n    HTMLSelectElement\r\n  > & { label: String }\r\n) {\r\n  const { className, label, ...restOfProps } = props;\r\n\r\n  return (\r\n    <>\r\n      <label className=\"mb-2 text-sm font-medium\">{props.label}</label>\r\n      <select\r\n        className={`${props.className ? props.className : \"\"}\r\n        text-base\r\n        font-normal\r\n      text-white w-full bg-transparent \r\n      border-white border-spacing-1 border-b \r\n      focus:text-gray-700 focus:bg-white`}\r\n        {...restOfProps}\r\n      ></select>\r\n    </>\r\n  );\r\n}\r\n","const URLS =  \r\n{\r\n    githubPageUrl: \"https://github.com/Rem0o/FanControl.Releases\",\r\n    directDownloadUrl: \"https://github.com/Rem0o/FanControl.Releases/blob/master/FanControl.zip?raw=true\",\r\n    versionJsonUrl: \"https://raw.githubusercontent.com/Rem0o/FanControl.Releases/master/version.json\",\r\n    lhmGithubPageUrl: \"https://github.com/LibreHardwareMonitor/LibreHardwareMonitor\",\r\n    pluginUrl: \"https://github.com/Rem0o/FanControl.Releases/wiki/Plugins\",\r\n    donationUrl: \"https://www.paypal.com/cgi-bin/webscr?cmd=_donations&business=N4JPSTUQHRJM8&currency_code=USD&source=url&item_name=Fan+Control\"\r\n}\r\n\r\nexport default { urls: URLS };","const svgPaths =  \r\n{\r\n    mix: \"M22,6.92L20.59,5.5L17.74,8.72C15.68,6.4 12.83,5 9.61,5C6.72,5 4.07,6.16 2,8L3.42,9.42C5.12,7.93 7.27,7 9.61,7C12.35,7 14.7,8.26 16.38,10.24L13.5,13.5L9.5,9.5L2,17L3.5,18.5L9.5,12.5L13.5,16.5L17.55,11.93C18.3,13.28 18.8,14.83 19,16.5H21C20.78,14.18 20.05,12.09 18.96,10.34L22,6.92Z\",\r\n    linear: \"M3.5,18.5L9.5,12.5L13.5,16.5L22,6.92L20.59,5.5L13.5,13.5L9.5,9.5L2,17L3.5,18.5Z\",\r\n    fan: \"M12,11A1,1 0 0,0 11,12A1,1 0 0,0 12,13A1,1 0 0,0 13,12A1,1 0 0,0 12,11M12.5,2C17,2 17.11,5.57 14.75,6.75C13.76,7.24 13.32,8.29 13.13,9.22C13.61,9.42 14.03,9.73 14.35,10.13C18.05,8.13 22.03,8.92 22.03,12.5C22.03,17 18.46,17.1 17.28,14.73C16.78,13.74 15.72,13.3 14.79,13.11C14.59,13.59 14.28,14 13.88,14.34C15.87,18.03 15.08,22 11.5,22C7,22 6.91,18.42 9.27,17.24C10.25,16.75 10.69,15.71 10.89,14.79C10.4,14.59 9.97,14.27 9.65,13.87C5.96,15.85 2,15.07 2,11.5C2,7 5.56,6.89 6.74,9.26C7.24,10.25 8.29,10.68 9.22,10.87C9.41,10.39 9.73,9.97 10.14,9.65C8.15,5.96 8.94,2 12.5,2Z\",\r\n    parameters: \"M11 15H17V17H11V15M9 7H7V9H9V7M11 13H17V11H11V13M11 9H17V7H11V9M9 11H7V13H9V11M21 5V19C21 20.1 20.1 21 19 21H5C3.9 21 3 20.1 3 19V5C3 3.9 3.9 3 5 3H19C20.1 3 21 3.9 21 5M19 5H5V19H19V5M9 15H7V17H9V15Z\",\r\n    github: \"M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z\",\r\n    download: \"M5,20H19V18H5M19,9H15V3H9V9H5L12,16L19,9Z\",\r\n    plugin: \"M21.4 7.5C22.2 8.3 22.2 9.6 21.4 10.3L18.6 13.1L10.8 5.3L13.6 2.5C14.4 1.7 15.7 1.7 16.4 2.5L18.2 4.3L21.2 1.3L22.6 2.7L19.6 5.7L21.4 7.5M15.6 13.3L14.2 11.9L11.4 14.7L9.3 12.6L12.1 9.8L10.7 8.4L7.9 11.2L6.4 9.8L3.6 12.6C2.8 13.4 2.8 14.7 3.6 15.4L5.4 17.2L1.4 21.2L2.8 22.6L6.8 18.6L8.6 20.4C9.4 21.2 10.7 21.2 11.4 20.4L14.2 17.6L12.8 16.2L15.6 13.3Z\",\r\n    mail: \"M22 6C22 4.9 21.1 4 20 4H4C2.9 4 2 4.9 2 6V18C2 19.1 2.9 20 4 20H20C21.1 20 22 19.1 22 18V6M20 6L12 11L4 6H20M20 18H4V8L12 13L20 8V18Z\",\r\n    user: \"M12,4A4,4 0 0,1 16,8A4,4 0 0,1 12,12A4,4 0 0,1 8,8A4,4 0 0,1 12,4M12,14C16.42,14 20,15.79 20,18V20H4V18C4,15.79 7.58,14 12,14Z\",\r\n    brush: \"M8 3C5.79 3 4 4.79 4 7V14C4 15.1 4.9 16 6 16H9V20C9 21.1 9.9 22 11 22H13C14.1 22 15 21.1 15 20V16H18C19.1 16 20 15.1 20 14V3H8M8 5H12V7H14V5H15V9H17V5H18V10H6V7C6 5.9 6.9 5 8 5M6 14V12H18V14H6Z\",\r\n    wrench: \"M22.7,19L13.6,9.9C14.5,7.6 14,4.9 12.1,3C10.1,1 7.1,0.6 4.7,1.7L9,6L6,9L1.6,4.7C0.4,7.1 0.9,10.1 2.9,12.1C4.8,14 7.5,14.5 9.8,13.6L18.9,22.7C19.3,23.1 19.9,23.1 20.3,22.7L22.6,20.4C23.1,20 23.1,19.3 22.7,19Z\",\r\n    graph: \"M4 19V20H22V22H2V2H4V17C7 17 10 15 12.1 11.4C15.1 6.4 18.4 4 22 4V6C19.2 6 16.5 8.1 13.9 12.5C11.3 16.6 7.7 19 4 19Z\",\r\n    bulb: \"M20,11H23V13H20V11M1,11H4V13H1V11M13,1V4H11V1H13M4.92,3.5L7.05,5.64L5.63,7.05L3.5,4.93L4.92,3.5M16.95,5.63L19.07,3.5L20.5,4.93L18.37,7.05L16.95,5.63M12,6A6,6 0 0,1 18,12C18,14.22 16.79,16.16 15,17.2V19A1,1 0 0,1 14,20H10A1,1 0 0,1 9,19V17.2C7.21,16.16 6,14.22 6,12A6,6 0 0,1 12,6M14,21V22A1,1 0 0,1 13,23H11A1,1 0 0,1 10,22V21H14M11,18H13V15.87C14.73,15.43 16,13.86 16,12A4,4 0 0,0 12,8A4,4 0 0,0 8,12C8,13.86 9.27,15.43 11,15.87V18Z\",\r\n    save: \"M17,7V3H7V7H17M14,17A3,3 0 0,0 17,14A3,3 0 0,0 14,11A3,3 0 0,0 11,14A3,3 0 0,0 14,17M19,1L23,5V17A2,2 0 0,1 21,19H7C5.89,19 5,18.1 5,17V3A2,2 0 0,1 7,1H19M1,7H3V21H17V23H3A2,2 0 0,1 1,21V7Z\",\r\n    temperature: \"M15 13V5A3 3 0 0 0 9 5V13A5 5 0 1 0 15 13M12 4A1 1 0 0 1 13 5V8H11V5A1 1 0 0 1 12 4Z\",\r\n    backend: \"M4,1H20A1,1 0 0,1 21,2V6A1,1 0 0,1 20,7H4A1,1 0 0,1 3,6V2A1,1 0 0,1 4,1M4,9H20A1,1 0 0,1 21,10V14A1,1 0 0,1 20,15H4A1,1 0 0,1 3,14V10A1,1 0 0,1 4,9M4,17H20A1,1 0 0,1 21,18V22A1,1 0 0,1 20,23H4A1,1 0 0,1 3,22V18A1,1 0 0,1 4,17M9,5H10V3H9V5M9,13H10V11H9V13M9,21H10V19H9V21M5,3V5H7V3H5M5,11V13H7V11H5M5,19V21H7V19H5Z\"\r\n}\r\n\r\nexport default { svgPaths };","import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nconst useInterval = (delay: number, callback: (() => void)) => {\r\n    const savedCallback = React.useRef(() => {});\r\n  \r\n    React.useEffect(() => {\r\n      savedCallback.current = callback;\r\n    }, [callback]);\r\n  \r\n    React.useEffect(() => {\r\n      function tick() {\r\n        savedCallback.current();\r\n      }\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }, [delay]);\r\n  };\r\n\r\n  const useTimeoutBooleanState = (\r\n    defaultValue: boolean,\r\n    delay: number\r\n  ): [boolean, React.Dispatch<React.SetStateAction<boolean>>] => {\r\n    const [state, setState] = useState(defaultValue);\r\n    const timerRef = useRef<NodeJS.Timeout | undefined>(undefined);\r\n  \r\n    useEffect(() => {\r\n      if (state) {\r\n        timerRef.current = setTimeout(() => {\r\n          setState(false);\r\n        }, delay);\r\n      }\r\n      return () => {\r\n        clearTimeout(timerRef.current);\r\n      };\r\n    }, [state, delay]);\r\n  \r\n    return [state, setState];\r\n  };\r\n\r\n  export { useInterval, useTimeoutBooleanState };","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import _defineProperty from \"C:/Users/Remi/source/repos/FanControl.Website/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode} [children]\n *   Children.\n *\n * @callback MergeComponents\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react';\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport var MDXContext = React.createContext({});\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent;\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    var allComponents = useMDXComponents(props.components);\n    return React.createElement(Component, _objectSpread(_objectSpread({}, props), {}, {\n      allComponents: allComponents\n    }));\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components|MergeComponents} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  var contextComponents = React.useContext(MDXContext);\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(function () {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents);\n    }\n    return _objectSpread(_objectSpread({}, contextComponents), components);\n  }, [contextComponents, components]);\n}\n\n/** @type {Components} */\nvar emptyObject = {};\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider(_ref) {\n  var components = _ref.components,\n    children = _ref.children,\n    disableParentContext = _ref.disableParentContext;\n  var allComponents = useMDXComponents(components);\n  if (disableParentContext) {\n    allComponents = components || emptyObject;\n  }\n  return React.createElement(MDXContext.Provider, {\n    value: allComponents\n  }, children);\n}","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"No installation required.\"), \"\\n\", React.createElement(\"br\"), \"\\n\", React.createElement(_components.p, null, \"Low on ressources, high on power.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import * as React from \"react\";\r\nimport type { HeadFC } from \"gatsby\";\r\nimport Layout from \"../components/layout\";\r\nimport Card from \"../components/card\";\r\nimport Description from \"../contents/description.mdx\";\r\nimport { StaticImage } from \"gatsby-plugin-image\";\r\nimport icons from \"./../contents/icons\";\r\nimport { Icon } from \"./../components/icon\";\r\nimport consts from \"../contents/consts\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useInterval, useTimeoutBooleanState } from \"../hooks/customHooks\";\r\nimport MixFanCurveCard from \"../components/demo/mixFanCurveCard\";\r\nimport createTempSource, {\r\n  TemperatureSource,\r\n} from \"../components/demo/temperatureSource\";\r\nimport { FanCurve } from \"../components/demo/fanCurve\";\r\nimport ExternalLink from \"../components/externalLink\";\r\n\r\nconst pageTitle = \"Fan Control\";\r\n\r\nconst NiceHeader = ({ icon, text }: { icon: string; text: string }) => {\r\n  return (\r\n    <h1 className=\"flex m-1\">\r\n      <svg className=\"h-12 w-12\" viewBox=\"0 0 24 24\">\r\n        <path fill=\"currentColor\" d={icon} />\r\n      </svg>\r\n      <span className=\"ml-5 text-2xl font-semibold\">{text}</span>\r\n    </h1>\r\n  );\r\n};\r\n\r\nconst IconButton = ({\r\n  background,\r\n  textColor,\r\n  text,\r\n  icon,\r\n  onClick,\r\n}: {\r\n  background: string;\r\n  textColor: string;\r\n  text: string;\r\n  icon: string;\r\n  onClick?: Function;\r\n}) => (\r\n  <button onClick={() => (onClick ? onClick() : null)}>\r\n    <Card className={background}>\r\n      <div className={`flex gap-2 w-40 ${textColor}`}>\r\n        {Icon(icon)}\r\n        <span className=\"m-auto\">{text}</span>\r\n      </div>\r\n    </Card>\r\n  </button>\r\n);\r\n\r\nconst DownloadButton = () => {\r\n  const [version, setVersion] = useState(0);\r\n\r\n  useEffect(() => {\r\n    fetch(consts.urls.versionJsonUrl)\r\n      .then((r) => r.json())\r\n      .then((json) => setVersion(json.Number));\r\n  }, []);\r\n\r\n  let text = \"Download\";\r\n  if (version > 0) {\r\n    text += \" V\" + version;\r\n  }\r\n\r\n  return (\r\n    <IconButton\r\n      onClick={() => window.open(consts.urls.directDownloadUrl)}\r\n      background=\"bg-blue-500 hover:bg-blue-600\"\r\n      icon={icons.svgPaths.download}\r\n      textColor=\"text-white\"\r\n      text={text}\r\n    />\r\n  );\r\n};\r\n\r\nconst DemoMixFanCurveCard = () => {\r\n  const getSources = (): [\r\n    TemperatureSource,\r\n    TemperatureSource,\r\n    TemperatureSource\r\n  ] => [\r\n    createTempSource(\"a\", 40, 60),\r\n    createTempSource(\"b\", 30, 70),\r\n    createTempSource(\"c\", 26, 65),\r\n  ];\r\n\r\n  const [sources, setSources] = useState(getSources());\r\n  useInterval(1000, () => {\r\n    setSources(getSources());\r\n  });\r\n\r\n  // we mock random fan curves that outputs the temperature source as the %\r\n  const mockedFanCurves: FanCurve[] = [\r\n    { name: \"CPU -> Case fans\", getValue: () => sources[0].value },\r\n    { name: \"GPU -> Case fans\", getValue: () => sources[1].value },\r\n    { name: \"SSD -> Case fans\", getValue: () => sources[2].value },\r\n  ];\r\n\r\n  return (\r\n    <MixFanCurveCard\r\n      name=\"Demo Case Fans\"\r\n      fanCurves={mockedFanCurves}\r\n      selectedFanCurvesDefault={mockedFanCurves.slice(0, 2).map((x) => x.name)}\r\n    ></MixFanCurveCard>\r\n  );\r\n};\r\n\r\nconst IndexPage = () => {\r\n  const [isSpinning, setIsSpinning] = useTimeoutBooleanState(true, 3000);\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"flex flex-col place-items-center text-center gap-12 p-5\">\r\n        <svg\r\n          onMouseEnter={() => setIsSpinning(true)}\r\n          className={`${\r\n            isSpinning ? \"animate-spin\" : \"\"\r\n          } hover:animate-spin h-36 w-36`}\r\n          viewBox=\"0 0 24 24\"\r\n        >\r\n          <path fill=\"currentColor\" d={icons.svgPaths.fan} />\r\n        </svg>\r\n        <h1 className=\"text-4xl max-w-lg font-bold\">\r\n          Fan Control is a highly focused fan controlling software for Windows.\r\n        </h1>\r\n        <div className=\"text-2xl\">\r\n          <Description />\r\n        </div>\r\n\r\n        <div className=\"flex gap-6\">\r\n          <IconButton\r\n            onClick={() => window.open(consts.urls.githubPageUrl)}\r\n            background=\"bg-gray-300 hover:bg-gray-400\"\r\n            icon={icons.svgPaths.github}\r\n            textColor=\"text-black\"\r\n            text=\"GitHub Page\"\r\n          />\r\n          <DownloadButton />\r\n        </div>\r\n\r\n        <StaticImage\r\n          className=\"rounded\"\r\n          width={800}\r\n          src=\"./../images/main.png\"\r\n          alt=\"Main interface\"\r\n        ></StaticImage>\r\n\r\n        <div>\r\n          <div className=\"text-2xl font-semibold mb-4\">Features rapid fire</div>\r\n          <div className=\"grid sm:grid-cols-1 md:grid-cols-2 gap-5 wrap\">\r\n            {[\r\n              [\r\n                icons.svgPaths.wrench,\r\n                \"Assisted setup will guide you through your initial config.\",\r\n              ],\r\n              [\r\n                icons.svgPaths.bulb,\r\n                \"As simple, or as complex of a config you can create. Start simple, then go crazy.\",\r\n              ],\r\n              [\r\n                icons.svgPaths.graph,\r\n                \"Multiple type of fan curves and custom sensors to choose from.\",\r\n              ],\r\n              [\r\n                icons.svgPaths.save,\r\n                \"Save, edit and load multiple configurations.\",\r\n              ],\r\n              [\r\n                icons.svgPaths.brush,\r\n                \"Customize the look of the software to fit your theme.\",\r\n              ],\r\n              [\r\n                icons.svgPaths.temperature,\r\n                \"Use the tray icon as a temperature display.\",\r\n              ],\r\n            ].map(([icon, text], i) => (\r\n              <div key={i} className=\"max-w-xs\">\r\n                <Card className=\"bg-white\">\r\n                  <div className=\"flex text-left items-center align-middle\">\r\n                    <div className=\"mr-3\">{Icon(icon)}</div>\r\n                    <div>{text}</div>\r\n                  </div>\r\n                </Card>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"grid sm:grid-cols-1 md:grid-cols-2 gap-10 wrap text-justify justify-center\">\r\n          <div className=\"max-w-sm\">\r\n            <NiceHeader\r\n              text=\"It's all about the mix\"\r\n              icon={icons.svgPaths.mix}\r\n            ></NiceHeader>\r\n            <p>\r\n              THE missing function that originates this whole project. Mix fan\r\n              curves take the possibilities to a whole new level. Combine any\r\n              type of fan curves together and apply a function like maximum or\r\n              average to create a whole new control logic. Different curves\r\n              bound to different temperature sensors, mixed together, your case\r\n              fans never asked for better. <br />\r\n              <br /> <b>Try it out on the demo card!</b>\r\n            </p>\r\n          </div>\r\n          <div className=\"m-auto\">\r\n            <DemoMixFanCurveCard />\r\n          </div>\r\n\r\n          <div className=\"max-w-sm\">\r\n            <NiceHeader\r\n              text=\"Tinkerers rejoice\"\r\n              icon={icons.svgPaths.parameters}\r\n            ></NiceHeader>\r\n            <p>\r\n              Fan Control has ALL the parameters. Response time, hysteresis,\r\n              hysteresis direction, step up, step down... Fine tune to your\r\n              hearth's desire. Control your fan's start and stopping logic, for\r\n              smooth 0 RPM operation <i>(when supported)</i>.\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"max-w-sm\">\r\n            <NiceHeader\r\n              text=\"Expansion through plugins\"\r\n              icon={icons.svgPaths.plugin}\r\n            ></NiceHeader>\r\n            <p>\r\n              Want to add more sensors and controls from a third party? No\r\n              problem! Fan Control has a simple{\" \"}\r\n              <ExternalLink href={consts.urls.pluginUrl}>plugin</ExternalLink>{\" \"}\r\n              system with .NET that allow any third party developper to add\r\n              temperature, speed or control sensors. Installing is as easy as\r\n              dropping a dll in the plugin folder, that's it.\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"max-w-sm\">\r\n            <NiceHeader\r\n              text=\"Open source backend\"\r\n              icon={icons.svgPaths.backend}\r\n            ></NiceHeader>\r\n            <p>\r\n              Fan Control backend is mainly based on{\" \"}\r\n              <ExternalLink href={consts.urls.lhmGithubPageUrl}>\r\n                LibreHardwareMonitor\r\n              </ExternalLink>\r\n              , an open source fork of the original OpenHardwareMonitor. This\r\n              means that hardware compatiblity is entierely open for anyone to\r\n              contribute, and doesn't rely on a single developper which may stop\r\n              caring at some point. Combined with the plugin system, Fan Control\r\n              is unlocked for many generations of hardware to come.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default IndexPage;\r\n\r\nexport const Head: HeadFC = () => <title>{pageTitle}</title>;\r\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}"],"names":["height","prototype","format","isLoading","isLoaded","images","loading","style","shouldLoad","opacity","placeholder","layout","width","backgroundColor","objectFit","objectPosition","wrapperStyle","position","top","left","bottom","right","transition","sources","fallbackImage","paddingTop","maxWidth","display","React","alt","role","src","a","children","props","Fragment","Sizer","t","srcSet","decoding","undefined","fallback","sizes","Image","length","map","media","type","key","propTypes","PropTypes","Picture","displayName","isRequired","Placeholder","_Picture$propTypes","propName","componentName","MainImage","rest","image","altValidator","Set","e","onError","as","className","preactClass","class","onStartLoad","onLoad","overflow","wStyle","wClass","wrapperProps","useRef","useMemo","JSON","stringify","sizer","useEffect","renderImageToStringPromise","import","then","renderImageToString","swapPlaceholderImage","renderImage","root","current","querySelector","ssrImage","hasNativeLazyLoadSupport","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","onLoadListener","imageCache","add","cacheKey","has","innerHTML","animationFrame","requestAnimationFrame","cleanupCallback","cancelAnimationFrame","useLayoutEffect","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","memo","warn","GatsbyImageHydrator","GatsbyImage","checkDimensionProps","validLayouts","Error","GatsbyImageBrowser","__error","imageData","__imageData","console","StaticImage","camelCase","input","options","Array","isArray","TypeError","Object","assign","pascalCase","x","trim","filter","join","toUpperCase","toLowerCase","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","test","slice","preserveCamelCase","replace","_","p1","m","charAt","module","exports","restOfProps","defaultClass","mixFunctions","name","invoke","fanCurves","getValue","reduce","b","f","createlinearFanCurve","selectedTemperature","num","min","max","source","find","value","Math","createMixFanCurve","mixFunction","selectedMixFunction","FanCurveCard","number","path","iconPath","fanCurve","controlValueSuffix","Card","viewBox","fill","d","toFixed","MixFanCurveCard","selectedFanCurvesDefault","useState","selectedFanCurveNames","setSelectedFanCurveNames","selectedFanCurves","includes","selectedFunction","setSelectedFunction","suffix","_selectedFanCurves$fi2","icons","Select","onChange","target","selectedIndex","label","index","fc","disabled","onClick","round","random","href","Icon","links","url","title","pageTitle","useTimeoutBooleanState","isSpinning","setIsSpinning","onMouseEnter","Link","to","link","urls","githubPageUrl","directDownloadUrl","versionJsonUrl","lhmGithubPageUrl","pluginUrl","donationUrl","svgPaths","mix","linear","fan","parameters","github","download","plugin","mail","user","brush","wrench","graph","bulb","save","temperature","backend","useInterval","delay","callback","savedCallback","id","setInterval","clearInterval","defaultValue","state","setState","timerRef","clearTimeout","_defineProperty","obj","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","push","apply","_objectSpread","arguments","forEach","getOwnPropertyDescriptors","defineProperties","MDXContext","useMDXComponents","components","contextComponents","_createMdxContent","_components","p","_provideComponents","MDXLayout","wrapper","NiceHeader","icon","text","IconButton","background","textColor","DownloadButton","version","setVersion","fetch","consts","r","json","Number","window","open","DemoMixFanCurveCard","getSources","createTempSource","setSources","mockedFanCurves","Layout","Description","ExternalLink","Head","_objectWithoutPropertiesLoose","excluded","sourceKeys","indexOf"],"sourceRoot":""}